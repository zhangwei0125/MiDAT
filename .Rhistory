#An important part of the package development process is R CMD check, which
#automatically checks your code for common problems. It's essential if you??re planning
#on submitting to CRAN, but it??s useful even if you??re not because it automatically
#detects many commons problems that you??d otherwise discover the hard way.
#R CMD check is the name of the command you run from the terminal. I don??t recommend
#calling it directly. Instead, run devtools::check(), or press Cmd-Shift-E in RStudio.
#The workflow for checking a package is simple, but tedious:
#1) Run devtools::check(), or press Ctrl/Cmd-Shift-E.
#2) Fix the first problem.
#3) Repeat until there are no more problems.
devtools::check()
library(mvtnorm)
devtools::check()
#An important part of the package development process is R CMD check, which
#automatically checks your code for common problems. It's essential if you??re planning
#on submitting to CRAN, but it??s useful even if you??re not because it automatically
#detects many commons problems that you??d otherwise discover the hard way.
#R CMD check is the name of the command you run from the terminal. I don??t recommend
#calling it directly. Instead, run devtools::check(), or press Cmd-Shift-E in RStudio.
#The workflow for checking a package is simple, but tedious:
#1) Run devtools::check(), or press Ctrl/Cmd-Shift-E.
#2) Fix the first problem.
#3) Repeat until there are no more problems.
devtools::check()  ## in the working directory of the package
#An important part of the package development process is R CMD check, which
#automatically checks your code for common problems. It's essential if you??re planning
#on submitting to CRAN, but it??s useful even if you??re not because it automatically
#detects many commons problems that you??d otherwise discover the hard way.
#R CMD check is the name of the command you run from the terminal. I don??t recommend
#calling it directly. Instead, run devtools::check(), or press Cmd-Shift-E in RStudio.
#The workflow for checking a package is simple, but tedious:
#1) Run devtools::check(), or press Ctrl/Cmd-Shift-E.
#2) Fix the first problem.
#3) Repeat until there are no more problems.
devtools::check()  ## in the working directory of the package
devtools::check()
devtools::check()
DataSample1 <- read.csv(file="C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating/NeededMaterials/ExampleOTU_sample1.csv", header=T)
DataSample2 <- read.csv(file="C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating/NeededMaterials/ExampleOTU_sample2.csv", header=T)
setwd("C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating/MiDAT/data")
save(DataSample1, file="DataSample1.rda")
save(DataSample2, file="DataSample1.rda")
rm(DataSample1)
rm(DataSample2)
setwd("C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating")
install("MiDAT")
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
setwd("C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating")
install("MiDAT")
#An important part of the package development process is R CMD check, which
#automatically checks your code for common problems. It's essential if you??re planning
#on submitting to CRAN, but it??s useful even if you??re not because it automatically
#detects many commons problems that you??d otherwise discover the hard way.
#R CMD check is the name of the command you run from the terminal. I don??t recommend
#calling it directly. Instead, run devtools::check(), or press Cmd-Shift-E in RStudio.
#The workflow for checking a package is simple, but tedious:
#1) Run devtools::check(), or press Ctrl/Cmd-Shift-E.
#2) Fix the first problem.
#3) Repeat until there are no more problems.
devtools::check()  ## in the working directory of the package
#An important part of the package development process is R CMD check, which
#automatically checks your code for common problems. It's essential if you??re planning
#on submitting to CRAN, but it??s useful even if you??re not because it automatically
#detects many commons problems that you??d otherwise discover the hard way.
#R CMD check is the name of the command you run from the terminal. I don??t recommend
#calling it directly. Instead, run devtools::check(), or press Cmd-Shift-E in RStudio.
#The workflow for checking a package is simple, but tedious:
#1) Run devtools::check(), or press Ctrl/Cmd-Shift-E.
#2) Fix the first problem.
#3) Repeat until there are no more problems.
devtools::check()  ## in the working directory of the package
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
setwd("C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating")
devtools::create("MiDAT")
setwd("C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating/MiDAT")
devtools::document()
setwd("C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating")
devtools::install("MiDAT")
DataSample1 <- read.csv(file="C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating/NeededMaterials/ExampleOTU_sample1.csv", header=T)
DataSample2 <- read.csv(file="C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating/NeededMaterials/ExampleOTU_sample2.csv", header=T)
setwd("C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating/MiDAT/data")
getwd()
save(DataSample1, file="DataSample1.rda")
save(DataSample2, file="DataSample2.rda")
rm(DataSample1)
rm(DataSample2)
setwd("C:/Users/dell/Desktop/Project-MiDAT/Rpackage-creating")
devtools::install("MiDAT")
#An important part of the package development process is R CMD check, which
#automatically checks your code for common problems. It's essential if you??re planning
#on submitting to CRAN, but it??s useful even if you??re not because it automatically
#detects many commons problems that you??d otherwise discover the hard way.
#R CMD check is the name of the command you run from the terminal. I don??t recommend
#calling it directly. Instead, run devtools::check(), or press Cmd-Shift-E in RStudio.
#The workflow for checking a package is simple, but tedious:
#1) Run devtools::check(), or press Ctrl/Cmd-Shift-E.
#2) Fix the first problem.
#3) Repeat until there are no more problems.
devtools::check()  ## in the working directory of the package
#An important part of the package development process is R CMD check, which
#automatically checks your code for common problems. It's essential if you??re planning
#on submitting to CRAN, but it??s useful even if you??re not because it automatically
#detects many commons problems that you??d otherwise discover the hard way.
#R CMD check is the name of the command you run from the terminal. I don??t recommend
#calling it directly. Instead, run devtools::check(), or press Cmd-Shift-E in RStudio.
#The workflow for checking a package is simple, but tedious:
#1) Run devtools::check(), or press Ctrl/Cmd-Shift-E.
#2) Fix the first problem.
#3) Repeat until there are no more problems.
devtools::check()  ## in the working directory of the package
